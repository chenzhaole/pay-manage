<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder
            ignore-unresolvable="true"
            location="classpath*:/config/jdbc.properties"/>


    <!-- 数据源配置, 使用 Druid 连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${jdbc.driver}"/>

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置连接池初始化大小、最小、最大 -->
        <property name="initialSize" value="${pool.initialSize}"/>
        <property name="minIdle" value="${pool.minIdle}"/>
        <property name="maxActive" value="${pool.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${pool.maxWait}"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${pool.timeBetweenEvictionRunsMillis}"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${pool.minEvictableIdleTimeMillis}"/>

        <!-- 配置是否缓存 preparedStatement，在 MySQL 下建议关闭。-->
        <property name="poolPreparedStatements" value="false"/>
        <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements 自动触发修改为true -->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>

        <!-- 配置有效性检测 -->
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="${pool.testWhileIdle}"/>
        <property name="testOnBorrow" value="${pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${pool.testOnReturn}"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>


</beans>
